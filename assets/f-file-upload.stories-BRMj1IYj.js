import{x as V,o as Q}from"./iframe-CCyKNv7C.js";const X=`<svg width="719" height="147" viewBox="0 0 719 147" fill="none" xmlns="http://www.w3.org/2000/svg">
	<path
		d="M178.08 54H179.556V50.58H183.792V49.236H179.556V46.944H184.332V45.6H178.08V54ZM185.811 46.692H187.371V45.312H185.811V46.692ZM185.871 54H187.323V47.664H185.871V54ZM189.305 54H190.757V45.24H189.305V54ZM195.558 54.144C196.722 54.144 197.55 53.676 198.15 52.956L197.298 52.2C196.794 52.692 196.29 52.956 195.582 52.956C194.646 52.956 193.914 52.38 193.758 51.348H198.414C198.426 51.204 198.438 51.072 198.438 50.94C198.438 49.116 197.418 47.532 195.402 47.532C193.59 47.532 192.306 49.02 192.306 50.832V50.856C192.306 52.812 193.722 54.144 195.558 54.144ZM193.746 50.388C193.878 49.404 194.502 48.72 195.39 48.72C196.35 48.72 196.902 49.452 196.998 50.388H193.746ZM205.678 54.132C206.662 54.132 207.25 53.616 207.658 53.016V54H209.122V47.664H207.658V51.24C207.658 52.224 207.07 52.8 206.23 52.8C205.366 52.8 204.874 52.248 204.874 51.264V47.664H203.422V51.696C203.422 53.172 204.25 54.132 205.678 54.132ZM210.935 55.92H212.387V53.016C212.831 53.604 213.491 54.132 214.547 54.132C216.047 54.132 217.487 52.944 217.487 50.844V50.82C217.487 48.708 216.035 47.532 214.547 47.532C213.515 47.532 212.855 48.06 212.387 48.72V47.664H210.935V55.92ZM214.199 52.872C213.215 52.872 212.351 52.056 212.351 50.844V50.82C212.351 49.608 213.215 48.792 214.199 48.792C215.183 48.792 216.011 49.596 216.011 50.82V50.844C216.011 52.092 215.195 52.872 214.199 52.872ZM219.07 54H220.522V45.24H219.07V54ZM225.432 54.144C227.388 54.144 228.828 52.644 228.828 50.844V50.82C228.828 49.008 227.4 47.532 225.456 47.532C223.512 47.532 222.072 49.032 222.072 50.844V50.868C222.072 52.668 223.5 54.144 225.432 54.144ZM225.456 52.872C224.328 52.872 223.524 51.948 223.524 50.844V50.82C223.524 49.716 224.268 48.804 225.432 48.804C226.572 48.804 227.376 49.728 227.376 50.844V50.868C227.376 51.96 226.632 52.872 225.456 52.872ZM232.131 54.132C233.103 54.132 233.763 53.724 234.195 53.208V54H235.611V50.244C235.611 49.416 235.395 48.744 234.927 48.288C234.483 47.832 233.775 47.58 232.827 47.58C231.819 47.58 231.135 47.784 230.439 48.096L230.823 49.236C231.399 48.996 231.927 48.84 232.635 48.84C233.655 48.84 234.207 49.32 234.207 50.22V50.376C233.715 50.22 233.211 50.112 232.503 50.112C230.955 50.112 229.887 50.784 229.887 52.152V52.176C229.887 53.448 230.943 54.132 232.131 54.132ZM232.539 53.076C231.843 53.076 231.303 52.728 231.303 52.116V52.092C231.303 51.432 231.855 51.036 232.791 51.036C233.367 51.036 233.859 51.144 234.231 51.288V51.72C234.231 52.524 233.499 53.076 232.539 53.076ZM239.965 54.132C240.998 54.132 241.658 53.604 242.126 52.944V54H243.578V45.24H242.126V48.648C241.67 48.048 241.01 47.532 239.965 47.532C238.454 47.532 237.026 48.72 237.026 50.82V50.844C237.026 52.944 238.478 54.132 239.965 54.132ZM240.314 52.872C239.33 52.872 238.49 52.068 238.49 50.844V50.82C238.49 49.56 239.318 48.792 240.314 48.792C241.286 48.792 242.15 49.596 242.15 50.82V50.844C242.15 52.056 241.286 52.872 240.314 52.872Z"
		fill="#202A36"
	/>
	<path
		d="M484.188 54H485.112V47.208L488.172 51.696H488.22L491.28 47.196V54H492.228V45.6H491.268L488.208 50.184L485.148 45.6H484.188V54ZM496.298 54.132C497.39 54.132 498.11 53.628 498.542 53.064V54H499.43V50.208C499.43 49.416 499.214 48.816 498.794 48.396C498.338 47.94 497.666 47.712 496.79 47.712C495.89 47.712 495.218 47.916 494.534 48.228L494.81 48.984C495.386 48.72 495.962 48.528 496.694 48.528C497.858 48.528 498.542 49.104 498.542 50.22V50.436C497.99 50.28 497.426 50.172 496.634 50.172C495.062 50.172 493.982 50.868 493.982 52.176V52.2C493.982 53.472 495.146 54.132 496.298 54.132ZM496.478 53.4C495.638 53.4 494.918 52.944 494.918 52.164V52.14C494.918 51.36 495.566 50.856 496.73 50.856C497.486 50.856 498.098 50.988 498.554 51.12V51.72C498.554 52.704 497.618 53.4 496.478 53.4ZM501.987 47.796H500.931L503.259 50.844L500.835 54H501.867L503.799 51.444L505.719 54H506.787L504.339 50.832L506.691 47.796H505.659L503.811 50.22L501.987 47.796ZM513.939 54.12C515.175 54.12 516.147 53.436 516.147 52.26V52.236C516.147 51.12 515.115 50.748 514.155 50.46C513.327 50.208 512.559 49.98 512.559 49.392V49.368C512.559 48.852 513.027 48.468 513.759 48.468C514.359 48.468 515.019 48.696 515.595 49.068L516.015 48.372C515.379 47.952 514.539 47.688 513.783 47.688C512.559 47.688 511.671 48.396 511.671 49.464V49.488C511.671 50.628 512.751 50.964 513.723 51.24C514.539 51.468 515.271 51.708 515.271 52.332V52.356C515.271 52.956 514.731 53.34 513.987 53.34C513.255 53.34 512.511 53.052 511.839 52.548L511.371 53.208C512.067 53.772 513.051 54.12 513.939 54.12ZM517.888 46.44H518.944V45.42H517.888V46.44ZM517.948 54H518.872V47.796H517.948V54ZM520.656 54H526.032V53.22H521.904L526.032 48.384V47.796H520.8V48.576H524.772L520.656 53.412V54ZM530.221 54.144C531.397 54.144 532.153 53.676 532.777 52.98L532.201 52.464C531.697 52.992 531.097 53.34 530.245 53.34C529.141 53.34 528.193 52.584 528.061 51.24H532.981C532.993 51.132 532.993 51.06 532.993 50.94C532.993 49.128 531.937 47.664 530.101 47.664C528.385 47.664 527.125 49.104 527.125 50.892V50.916C527.125 52.836 528.517 54.144 530.221 54.144ZM528.061 50.556C528.181 49.344 528.997 48.444 530.077 48.444C531.313 48.444 531.961 49.428 532.057 50.556H528.061ZM534.562 49.056H535.666V47.796H534.562V49.056ZM534.562 54H535.666V52.74H534.562V54ZM542.382 54H543.318V45.54H542.622L540.57 46.248L540.798 47.016L542.382 46.524V54ZM549.321 54H550.245V47.208L553.305 51.696H553.353L556.413 47.196V54H557.361V45.6H556.401L553.341 50.184L550.281 45.6H549.321V54ZM559.739 54H563.471C565.307 54 566.519 53.148 566.519 51.708V51.684C566.519 50.532 565.715 49.956 564.719 49.656C565.379 49.368 566.051 48.804 566.051 47.712V47.688C566.051 47.148 565.859 46.704 565.511 46.344C565.031 45.876 564.275 45.6 563.315 45.6H559.739V54ZM565.091 47.844C565.091 48.828 564.299 49.344 563.159 49.344H560.675V46.452H563.231C564.431 46.452 565.091 46.992 565.091 47.82V47.844ZM565.559 51.624V51.648C565.559 52.584 564.767 53.148 563.495 53.148H560.675V50.184H563.327C564.791 50.184 565.559 50.712 565.559 51.624Z"
		fill="#202A36"
	/>
	<rect x="177.5" y="63.5" width="390" height="63" rx="3.5" fill="#CCE7FF" />
	<path
		d="M190.188 88H193.104C195.744 88 197.568 86.164 197.568 83.8V83.776C197.568 81.412 195.744 79.6 193.104 79.6H190.188V88ZM193.104 80.476C195.228 80.476 196.584 81.94 196.584 83.8V83.824C196.584 85.684 195.228 87.124 193.104 87.124H191.136V80.476H193.104ZM199.419 88H200.343V85.528C200.343 83.656 201.447 82.684 202.803 82.684H202.875V81.688C201.699 81.64 200.799 82.384 200.343 83.416V81.796H199.419V88ZM205.825 88.132C206.917 88.132 207.637 87.628 208.069 87.064V88H208.957V84.208C208.957 83.416 208.741 82.816 208.321 82.396C207.865 81.94 207.193 81.712 206.317 81.712C205.417 81.712 204.745 81.916 204.061 82.228L204.337 82.984C204.913 82.72 205.489 82.528 206.221 82.528C207.385 82.528 208.069 83.104 208.069 84.22V84.436C207.517 84.28 206.953 84.172 206.161 84.172C204.589 84.172 203.509 84.868 203.509 86.176V86.2C203.509 87.472 204.673 88.132 205.825 88.132ZM206.005 87.4C205.165 87.4 204.445 86.944 204.445 86.164V86.14C204.445 85.36 205.093 84.856 206.257 84.856C207.013 84.856 207.625 84.988 208.081 85.12V85.72C208.081 86.704 207.145 87.4 206.005 87.4ZM213.675 89.944C214.659 89.944 215.487 89.668 216.039 89.116C216.543 88.612 216.831 87.88 216.831 86.92V81.796H215.907V82.912C215.403 82.24 214.647 81.664 213.483 81.664C212.007 81.664 210.567 82.78 210.567 84.592V84.616C210.567 86.404 211.995 87.52 213.483 87.52C214.623 87.52 215.379 86.932 215.919 86.212V86.944C215.919 88.396 215.031 89.152 213.663 89.152C212.775 89.152 211.983 88.876 211.275 88.36L210.855 89.08C211.683 89.656 212.643 89.944 213.675 89.944ZM213.663 86.704C212.511 86.704 211.515 85.84 211.515 84.592V84.568C211.515 83.296 212.487 82.48 213.663 82.48C214.839 82.48 215.943 83.308 215.943 84.58V84.604C215.943 85.852 214.839 86.704 213.663 86.704ZM224.341 88.132C225.433 88.132 226.153 87.628 226.585 87.064V88H227.473V84.208C227.473 83.416 227.257 82.816 226.837 82.396C226.381 81.94 225.709 81.712 224.833 81.712C223.933 81.712 223.261 81.916 222.577 82.228L222.853 82.984C223.429 82.72 224.005 82.528 224.737 82.528C225.901 82.528 226.585 83.104 226.585 84.22V84.436C226.033 84.28 225.469 84.172 224.677 84.172C223.105 84.172 222.025 84.868 222.025 86.176V86.2C222.025 87.472 223.189 88.132 224.341 88.132ZM224.521 87.4C223.681 87.4 222.961 86.944 222.961 86.164V86.14C222.961 85.36 223.609 84.856 224.773 84.856C225.529 84.856 226.141 84.988 226.597 85.12V85.72C226.597 86.704 225.661 87.4 224.521 87.4ZM229.442 88H230.366V84.448C230.366 83.284 231.158 82.504 232.226 82.504C233.318 82.504 233.942 83.224 233.942 84.376V88H234.866V84.148C234.866 82.672 233.99 81.664 232.49 81.664C231.422 81.664 230.774 82.204 230.366 82.876V81.796H229.442V88ZM239.441 88.132C240.581 88.132 241.313 87.496 241.817 86.752V88H242.741V79.24H241.817V82.984C241.337 82.288 240.593 81.664 239.441 81.664C237.953 81.664 236.477 82.864 236.477 84.892V84.916C236.477 86.956 237.953 88.132 239.441 88.132ZM239.609 87.304C238.445 87.304 237.425 86.368 237.425 84.904V84.88C237.425 83.38 238.409 82.492 239.609 82.492C240.761 82.492 241.853 83.452 241.853 84.88V84.904C241.853 86.332 240.761 87.304 239.609 87.304ZM251.007 88.132C252.147 88.132 252.879 87.496 253.383 86.752V88H254.307V79.24H253.383V82.984C252.903 82.288 252.159 81.664 251.007 81.664C249.519 81.664 248.043 82.864 248.043 84.892V84.916C248.043 86.956 249.519 88.132 251.007 88.132ZM251.175 87.304C250.011 87.304 248.991 86.368 248.991 84.904V84.88C248.991 83.38 249.975 82.492 251.175 82.492C252.327 82.492 253.419 83.452 253.419 84.88V84.904C253.419 86.332 252.327 87.304 251.175 87.304ZM256.372 88H257.296V85.528C257.296 83.656 258.4 82.684 259.756 82.684H259.828V81.688C258.652 81.64 257.752 82.384 257.296 83.416V81.796H256.372V88ZM263.798 88.144C265.67 88.144 267.05 86.656 267.05 84.904V84.88C267.05 83.128 265.682 81.664 263.822 81.664C261.95 81.664 260.582 83.152 260.582 84.904V84.928C260.582 86.68 261.938 88.144 263.798 88.144ZM263.822 87.316C262.514 87.316 261.53 86.236 261.53 84.904V84.88C261.53 83.572 262.454 82.48 263.798 82.48C265.106 82.48 266.102 83.572 266.102 84.904V84.928C266.102 86.236 265.166 87.316 263.822 87.316ZM268.723 89.92H269.647V86.812C270.127 87.508 270.871 88.132 272.023 88.132C273.523 88.132 274.987 86.932 274.987 84.904V84.88C274.987 82.84 273.511 81.664 272.023 81.664C270.883 81.664 270.151 82.3 269.647 83.044V81.796H268.723V89.92ZM271.855 87.304C270.703 87.304 269.611 86.344 269.611 84.904V84.88C269.611 83.464 270.703 82.492 271.855 82.492C273.031 82.492 274.039 83.428 274.039 84.892V84.916C274.039 86.416 273.055 87.304 271.855 87.304ZM280.638 88H281.562V82.612H283.518V81.82H281.55V81.316C281.55 80.428 281.91 79.996 282.63 79.996C282.942 79.996 283.194 80.056 283.53 80.152V79.348C283.23 79.24 282.942 79.192 282.51 79.192C281.946 79.192 281.49 79.36 281.178 79.672C280.83 80.02 280.638 80.56 280.638 81.268V81.808H279.786V82.612H280.638V88ZM284.79 88H285.702V81.796H284.79V88ZM284.718 80.44H285.774V79.42H284.718V80.44ZM287.944 88H288.868V79.24H287.944V88ZM293.724 88.144C294.9 88.144 295.656 87.676 296.28 86.98L295.704 86.464C295.2 86.992 294.6 87.34 293.748 87.34C292.644 87.34 291.696 86.584 291.564 85.24H296.484C296.496 85.132 296.496 85.06 296.496 84.94C296.496 83.128 295.44 81.664 293.604 81.664C291.888 81.664 290.628 83.104 290.628 84.892V84.916C290.628 86.836 292.02 88.144 293.724 88.144ZM291.564 84.556C291.684 83.344 292.5 82.444 293.58 82.444C294.816 82.444 295.464 83.428 295.56 84.556H291.564ZM300.166 88.12C301.402 88.12 302.374 87.436 302.374 86.26V86.236C302.374 85.12 301.342 84.748 300.382 84.46C299.554 84.208 298.786 83.98 298.786 83.392V83.368C298.786 82.852 299.254 82.468 299.986 82.468C300.586 82.468 301.246 82.696 301.822 83.068L302.242 82.372C301.606 81.952 300.766 81.688 300.01 81.688C298.786 81.688 297.898 82.396 297.898 83.464V83.488C297.898 84.628 298.978 84.964 299.95 85.24C300.766 85.468 301.498 85.708 301.498 86.332V86.356C301.498 86.956 300.958 87.34 300.214 87.34C299.482 87.34 298.738 87.052 298.066 86.548L297.598 87.208C298.294 87.772 299.278 88.12 300.166 88.12ZM307.688 88H308.612V84.448C308.612 83.284 309.404 82.504 310.472 82.504C311.564 82.504 312.188 83.224 312.188 84.376V88H313.112V84.148C313.112 82.672 312.236 81.664 310.736 81.664C309.668 81.664 309.02 82.204 308.612 82.876V79.24H307.688V88ZM317.795 88.144C318.971 88.144 319.727 87.676 320.351 86.98L319.775 86.464C319.271 86.992 318.671 87.34 317.819 87.34C316.715 87.34 315.767 86.584 315.635 85.24H320.555C320.567 85.132 320.567 85.06 320.567 84.94C320.567 83.128 319.511 81.664 317.675 81.664C315.959 81.664 314.699 83.104 314.699 84.892V84.916C314.699 86.836 316.091 88.144 317.795 88.144ZM315.635 84.556C315.755 83.344 316.571 82.444 317.651 82.444C318.887 82.444 319.535 83.428 319.631 84.556H315.635ZM322.184 88H323.108V85.528C323.108 83.656 324.212 82.684 325.568 82.684H325.64V81.688C324.464 81.64 323.564 82.384 323.108 83.416V81.796H322.184V88ZM329.49 88.144C330.666 88.144 331.422 87.676 332.046 86.98L331.47 86.464C330.966 86.992 330.366 87.34 329.514 87.34C328.41 87.34 327.462 86.584 327.33 85.24H332.25C332.262 85.132 332.262 85.06 332.262 84.94C332.262 83.128 331.206 81.664 329.37 81.664C327.654 81.664 326.394 83.104 326.394 84.892V84.916C326.394 86.836 327.786 88.144 329.49 88.144ZM327.33 84.556C327.45 83.344 328.266 82.444 329.346 82.444C330.582 82.444 331.23 83.428 331.326 84.556H327.33ZM340.309 88.144C342.181 88.144 343.561 86.656 343.561 84.904V84.88C343.561 83.128 342.193 81.664 340.333 81.664C338.461 81.664 337.093 83.152 337.093 84.904V84.928C337.093 86.68 338.449 88.144 340.309 88.144ZM340.333 87.316C339.025 87.316 338.041 86.236 338.041 84.904V84.88C338.041 83.572 338.965 82.48 340.309 82.48C341.617 82.48 342.613 83.572 342.613 84.904V84.928C342.613 86.236 341.677 87.316 340.333 87.316ZM345.235 88H346.159V85.528C346.159 83.656 347.263 82.684 348.619 82.684H348.691V81.688C347.515 81.64 346.615 82.384 346.159 83.416V81.796H345.235V88ZM356.492 88.144C357.656 88.144 358.4 87.64 359.024 86.944L358.436 86.392C357.944 86.92 357.332 87.316 356.54 87.316C355.244 87.316 354.26 86.248 354.26 84.904V84.88C354.26 83.548 355.22 82.48 356.48 82.48C357.32 82.48 357.872 82.9 358.364 83.416L358.976 82.768C358.4 82.156 357.668 81.664 356.492 81.664C354.68 81.664 353.312 83.152 353.312 84.904V84.928C353.312 86.668 354.68 88.144 356.492 88.144ZM360.636 88H361.56V79.24H360.636V88ZM363.728 80.44H364.784V79.42H363.728V80.44ZM363.788 88H364.712V81.796H363.788V88ZM369.652 88.144C370.816 88.144 371.56 87.64 372.184 86.944L371.596 86.392C371.104 86.92 370.492 87.316 369.7 87.316C368.404 87.316 367.42 86.248 367.42 84.904V84.88C367.42 83.548 368.38 82.48 369.64 82.48C370.48 82.48 371.032 82.9 371.524 83.416L372.136 82.768C371.56 82.156 370.828 81.664 369.652 81.664C367.84 81.664 366.472 83.152 366.472 84.904V84.928C366.472 86.668 367.84 88.144 369.652 88.144ZM373.712 88H374.636V86.38L375.896 85.108L378.116 88H379.22L376.532 84.46L379.136 81.796H377.984L374.636 85.288V79.24H373.712V88ZM386.217 88.108C386.661 88.108 387.009 88.012 387.333 87.844V87.052C387.009 87.208 386.745 87.268 386.433 87.268C385.809 87.268 385.389 86.992 385.389 86.236V82.612H387.357V81.796H385.389V79.924H384.465V81.796H383.601V82.612H384.465V86.356C384.465 87.616 385.221 88.108 386.217 88.108ZM391.649 88.144C393.521 88.144 394.901 86.656 394.901 84.904V84.88C394.901 83.128 393.533 81.664 391.673 81.664C389.801 81.664 388.433 83.152 388.433 84.904V84.928C388.433 86.68 389.789 88.144 391.649 88.144ZM391.673 87.316C390.365 87.316 389.381 86.236 389.381 84.904V84.88C389.381 83.572 390.305 82.48 391.649 82.48C392.957 82.48 393.953 83.572 393.953 84.904V84.928C393.953 86.236 393.017 87.316 391.673 87.316ZM402.453 88.132C403.521 88.132 404.157 87.592 404.577 86.92V88H405.489V81.796H404.577V85.348C404.577 86.512 403.773 87.292 402.717 87.292C401.625 87.292 401.001 86.572 401.001 85.42V81.796H400.077V85.648C400.077 87.124 400.953 88.132 402.453 88.132ZM407.567 89.92H408.491V86.812C408.971 87.508 409.715 88.132 410.867 88.132C412.367 88.132 413.831 86.932 413.831 84.904V84.88C413.831 82.84 412.355 81.664 410.867 81.664C409.727 81.664 408.995 82.3 408.491 83.044V81.796H407.567V89.92ZM410.699 87.304C409.547 87.304 408.455 86.344 408.455 84.904V84.88C408.455 83.464 409.547 82.492 410.699 82.492C411.875 82.492 412.883 83.428 412.883 84.892V84.916C412.883 86.416 411.899 87.304 410.699 87.304ZM415.62 88H416.544V79.24H415.62V88ZM421.52 88.144C423.392 88.144 424.772 86.656 424.772 84.904V84.88C424.772 83.128 423.404 81.664 421.544 81.664C419.672 81.664 418.304 83.152 418.304 84.904V84.928C418.304 86.68 419.66 88.144 421.52 88.144ZM421.544 87.316C420.236 87.316 419.252 86.236 419.252 84.904V84.88C419.252 83.572 420.176 82.48 421.52 82.48C422.828 82.48 423.824 83.572 423.824 84.904V84.928C423.824 86.236 422.888 87.316 421.544 87.316ZM428.294 88.132C429.386 88.132 430.106 87.628 430.538 87.064V88H431.426V84.208C431.426 83.416 431.21 82.816 430.79 82.396C430.334 81.94 429.662 81.712 428.786 81.712C427.886 81.712 427.214 81.916 426.53 82.228L426.806 82.984C427.382 82.72 427.958 82.528 428.69 82.528C429.854 82.528 430.538 83.104 430.538 84.22V84.436C429.986 84.28 429.422 84.172 428.63 84.172C427.058 84.172 425.978 84.868 425.978 86.176V86.2C425.978 87.472 427.142 88.132 428.294 88.132ZM428.474 87.4C427.634 87.4 426.914 86.944 426.914 86.164V86.14C426.914 85.36 427.562 84.856 428.726 84.856C429.482 84.856 430.094 84.988 430.55 85.12V85.72C430.55 86.704 429.614 87.4 428.474 87.4ZM435.999 88.132C437.139 88.132 437.871 87.496 438.375 86.752V88H439.299V79.24H438.375V82.984C437.895 82.288 437.151 81.664 435.999 81.664C434.511 81.664 433.035 82.864 433.035 84.892V84.916C433.035 86.956 434.511 88.132 435.999 88.132ZM436.167 87.304C435.003 87.304 433.983 86.368 433.983 84.904V84.88C433.983 83.38 434.967 82.492 436.167 82.492C437.319 82.492 438.411 83.452 438.411 84.88V84.904C438.411 86.332 437.319 87.304 436.167 87.304Z"
		fill="#202A36"
	/>
	<path
		d="M193.14 111.692L193.536 111.08C191.712 109.916 190.752 108.476 190.752 106.556C190.752 104.636 191.712 103.196 193.536 102.032L193.14 101.42C191.004 102.62 189.816 104.348 189.816 106.556C189.816 108.764 191.004 110.492 193.14 111.692ZM195.391 110H196.339V107.036H198.379C200.167 107.036 201.679 106.1 201.679 104.288V104.264C201.679 102.608 200.431 101.6 198.535 101.6H195.391V110ZM196.339 106.172V102.476H198.463C199.819 102.476 200.719 103.1 200.719 104.3V104.324C200.719 105.428 199.807 106.172 198.415 106.172H196.339ZM203.407 110H204.331V103.112L209.755 110H210.511V101.6H209.587V108.332L204.295 101.6H203.407V110ZM216.787 110.144C218.203 110.144 219.379 109.556 220.159 108.86V105.512H216.691V106.364H219.247V108.452C218.671 108.92 217.783 109.292 216.823 109.292C214.783 109.292 213.499 107.804 213.499 105.8V105.776C213.499 103.904 214.831 102.332 216.691 102.332C217.879 102.332 218.599 102.728 219.247 103.292L219.859 102.572C219.019 101.864 218.143 101.456 216.727 101.456C214.207 101.456 212.515 103.496 212.515 105.8V105.824C212.515 108.224 214.147 110.144 216.787 110.144ZM221.805 111.464C222.717 111.26 223.137 110.792 223.137 109.82V108.74H222.033V110H222.465C222.513 110.516 222.261 110.828 221.661 111.044L221.805 111.464ZM227.015 110.12C227.759 110.12 228.395 109.88 228.863 109.424C229.343 108.944 229.631 108.2 229.631 107.216V101.6H228.671V107.228C228.671 108.56 227.975 109.244 227.027 109.244C226.151 109.244 225.623 108.824 225.107 108.044L224.423 108.632C224.951 109.496 225.755 110.12 227.015 110.12ZM231.872 110H232.82V107.036H234.86C236.648 107.036 238.16 106.1 238.16 104.288V104.264C238.16 102.608 236.912 101.6 235.016 101.6H231.872V110ZM232.82 106.172V102.476H234.944C236.3 102.476 237.2 103.1 237.2 104.3V104.324C237.2 105.428 236.288 106.172 234.896 106.172H232.82ZM243.787 110.144C245.203 110.144 246.379 109.556 247.159 108.86V105.512H243.691V106.364H246.247V108.452C245.671 108.92 244.783 109.292 243.823 109.292C241.783 109.292 240.499 107.804 240.499 105.8V105.776C240.499 103.904 241.831 102.332 243.691 102.332C244.879 102.332 245.599 102.728 246.247 103.292L246.859 102.572C246.019 101.864 245.143 101.456 243.727 101.456C241.207 101.456 239.515 103.496 239.515 105.8V105.824C239.515 108.224 241.147 110.144 243.787 110.144ZM248.805 111.464C249.717 111.26 250.137 110.792 250.137 109.82V108.74H249.033V110H249.465C249.513 110.516 249.261 110.828 248.661 111.044L248.805 111.464ZM252.239 110H255.155C257.795 110 259.619 108.164 259.619 105.8V105.776C259.619 103.412 257.795 101.6 255.155 101.6H252.239V110ZM255.155 102.476C257.279 102.476 258.635 103.94 258.635 105.8V105.824C258.635 107.684 257.279 109.124 255.155 109.124H253.187V102.476H255.155ZM265.526 110.144C268.082 110.144 269.822 108.116 269.822 105.8V105.776C269.822 103.46 268.106 101.456 265.55 101.456C262.994 101.456 261.254 103.484 261.254 105.8V105.824C261.254 108.14 262.97 110.144 265.526 110.144ZM265.55 109.268C263.63 109.268 262.238 107.708 262.238 105.8V105.776C262.238 103.868 263.605 102.332 265.526 102.332C267.446 102.332 268.838 103.892 268.838 105.8V105.824C268.838 107.732 267.47 109.268 265.55 109.268ZM275.661 110.144C277.185 110.144 278.145 109.556 279.021 108.668L278.397 108.056C277.593 108.824 276.837 109.268 275.685 109.268C273.837 109.268 272.433 107.744 272.433 105.8V105.776C272.433 103.844 273.825 102.332 275.685 102.332C276.825 102.332 277.617 102.812 278.325 103.484L278.973 102.788C278.133 101.996 277.221 101.456 275.697 101.456C273.225 101.456 271.449 103.424 271.449 105.8V105.824C271.449 108.236 273.237 110.144 275.661 110.144ZM280.188 111.464C281.1 111.26 281.52 110.792 281.52 109.82V108.74H280.416V110H280.848C280.896 110.516 280.644 110.828 280.044 111.044L280.188 111.464ZM283.622 110H284.57V107.036H286.61C288.398 107.036 289.91 106.1 289.91 104.288V104.264C289.91 102.608 288.662 101.6 286.766 101.6H283.622V110ZM284.57 106.172V102.476H286.694C288.05 102.476 288.95 103.1 288.95 104.3V104.324C288.95 105.428 288.038 106.172 286.646 106.172H284.57ZM291.637 110H294.553C297.193 110 299.017 108.164 299.017 105.8V105.776C299.017 103.412 297.193 101.6 294.553 101.6H291.637V110ZM294.553 102.476C296.677 102.476 298.033 103.94 298.033 105.8V105.824C298.033 107.684 296.677 109.124 294.553 109.124H292.585V102.476H294.553ZM301.024 110H301.972V106.34H306.52V105.476H301.972V102.476H307.06V101.6H301.024V110ZM308.779 111.692C310.915 110.492 312.103 108.764 312.103 106.556C312.103 104.348 310.915 102.62 308.779 101.42L308.383 102.032C310.207 103.196 311.167 104.636 311.167 106.556C311.167 108.476 310.207 109.916 308.383 111.08L308.779 111.692Z"
		fill="#5A7495"
	/>
	<path
		fill-rule="evenodd"
		clip-rule="evenodd"
		d="M539 102C539 101.448 539.448 101 540 101H552C552.552 101 553 101.448 553 102C553 102.552 552.552 103 552 103H540C539.448 103 539 102.552 539 102ZM542.293 91.7071C541.902 91.3166 541.902 90.6834 542.293 90.2929L545.293 87.2929C545.48 87.1054 545.735 87 546 87C546.265 87 546.52 87.1054 546.707 87.2929L549.707 90.2929C550.098 90.6834 550.098 91.3166 549.707 91.7071C549.317 92.0976 548.683 92.0976 548.293 91.7071L547 90.4142L547 98C547 98.5523 546.552 99 546 99C545.448 99 545 98.5523 545 98L545 90.4142L543.707 91.7071C543.317 92.0976 542.683 92.0976 542.293 91.7071Z"
		fill="#202A36"
	/>
	<rect
		x="177.5"
		y="63.5"
		width="390"
		height="63"
		rx="3.5"
		stroke="#5C708A"
		stroke-dasharray="4 4"
	/>
	<path
		d="M177.99 142H178.78V138.85H182.82V142H183.61V135H182.82V138.11H178.78V135H177.99V142ZM187.718 142.12C188.698 142.12 189.328 141.73 189.848 141.15L189.368 140.72C188.948 141.16 188.448 141.45 187.738 141.45C186.818 141.45 186.028 140.82 185.918 139.7H190.018C190.028 139.61 190.028 139.55 190.028 139.45C190.028 137.94 189.148 136.72 187.618 136.72C186.188 136.72 185.138 137.92 185.138 139.41V139.43C185.138 141.03 186.298 142.12 187.718 142.12ZM185.918 139.13C186.018 138.12 186.698 137.37 187.598 137.37C188.628 137.37 189.168 138.19 189.248 139.13H185.918ZM191.446 142H192.216V134.7H191.446V142ZM194.003 143.6H194.773V141.01C195.173 141.59 195.793 142.11 196.753 142.11C198.003 142.11 199.223 141.11 199.223 139.42V139.4C199.223 137.7 197.993 136.72 196.753 136.72C195.803 136.72 195.193 137.25 194.773 137.87V136.83H194.003V143.6ZM196.613 141.42C195.653 141.42 194.743 140.62 194.743 139.42V139.4C194.743 138.22 195.653 137.41 196.613 137.41C197.593 137.41 198.433 138.19 198.433 139.41V139.43C198.433 140.68 197.613 141.42 196.613 141.42ZM202.903 142.12C203.883 142.12 204.513 141.73 205.033 141.15L204.553 140.72C204.133 141.16 203.633 141.45 202.923 141.45C202.003 141.45 201.213 140.82 201.103 139.7H205.203C205.213 139.61 205.213 139.55 205.213 139.45C205.213 137.94 204.333 136.72 202.803 136.72C201.373 136.72 200.323 137.92 200.323 139.41V139.43C200.323 141.03 201.483 142.12 202.903 142.12ZM201.103 139.13C201.203 138.12 201.883 137.37 202.783 137.37C203.813 137.37 204.353 138.19 204.433 139.13H201.103ZM206.561 142H207.331V139.94C207.331 138.38 208.251 137.57 209.381 137.57H209.441V136.74C208.461 136.7 207.711 137.32 207.331 138.18V136.83H206.561V142ZM215.342 142.09C215.712 142.09 216.002 142.01 216.272 141.87V141.21C216.002 141.34 215.782 141.39 215.522 141.39C215.002 141.39 214.652 141.16 214.652 140.53V137.51H216.292V136.83H214.652V135.27H213.882V136.83H213.162V137.51H213.882V140.63C213.882 141.68 214.512 142.09 215.342 142.09ZM219.768 142.12C220.748 142.12 221.378 141.73 221.898 141.15L221.418 140.72C220.998 141.16 220.498 141.45 219.788 141.45C218.868 141.45 218.078 140.82 217.968 139.7H222.068C222.078 139.61 222.078 139.55 222.078 139.45C222.078 137.94 221.198 136.72 219.668 136.72C218.238 136.72 217.188 137.92 217.188 139.41V139.43C217.188 141.03 218.348 142.12 219.768 142.12ZM217.968 139.13C218.068 138.12 218.748 137.37 219.648 137.37C220.678 137.37 221.218 138.19 221.298 139.13H217.968ZM223.614 136.83H222.734L224.674 139.37L222.654 142H223.514L225.124 139.87L226.724 142H227.614L225.574 139.36L227.534 136.83H226.674L225.134 138.85L223.614 136.83ZM230.596 142.09C230.966 142.09 231.256 142.01 231.526 141.87V141.21C231.256 141.34 231.036 141.39 230.776 141.39C230.256 141.39 229.906 141.16 229.906 140.53V137.51H231.546V136.83H229.906V135.27H229.136V136.83H228.416V137.51H229.136V140.63C229.136 141.68 229.766 142.09 230.596 142.09Z"
		fill="#202A36"
	/>
	<path
		d="M594.644 98.12C596.168 98.12 597.572 96.944 597.572 94.796V94.772C597.572 92.624 596.144 91.448 594.644 91.448C593.696 91.448 593.084 91.892 592.64 92.492V89.24H590.816V98H592.64V97.16C593.072 97.676 593.672 98.12 594.644 98.12ZM594.176 96.572C593.324 96.572 592.616 95.864 592.616 94.796V94.772C592.616 93.704 593.324 92.996 594.176 92.996C595.028 92.996 595.748 93.704 595.748 94.772V94.796C595.748 95.876 595.028 96.572 594.176 96.572ZM598.914 98H600.738V95.624C600.738 94.088 601.482 93.356 602.694 93.356H602.79V91.448C601.71 91.4 601.11 91.976 600.738 92.864V91.568H598.914V98ZM606.91 98.144C608.914 98.144 610.402 96.644 610.402 94.796V94.772C610.402 92.924 608.926 91.448 606.934 91.448C604.93 91.448 603.442 92.948 603.442 94.796V94.82C603.442 96.668 604.918 98.144 606.91 98.144ZM606.934 96.572C605.926 96.572 605.242 95.744 605.242 94.796V94.772C605.242 93.824 605.866 93.02 606.91 93.02C607.918 93.02 608.602 93.848 608.602 94.796V94.82C608.602 95.768 607.978 96.572 606.934 96.572ZM612.87 98.048H614.502L615.762 94.1L616.998 98.048H618.642L620.646 91.568H618.834L617.778 95.48L616.554 91.544H614.982L613.77 95.468L612.738 91.568H610.89L612.87 98.048ZM623.834 98.12C625.226 98.12 626.294 97.472 626.294 96.044V96.02C626.294 94.844 625.25 94.412 624.35 94.112C623.654 93.872 623.042 93.704 623.042 93.344V93.32C623.042 93.068 623.27 92.876 623.714 92.876C624.182 92.876 624.818 93.104 625.454 93.476L626.15 92.216C625.454 91.748 624.566 91.472 623.75 91.472C622.454 91.472 621.398 92.204 621.398 93.512V93.536C621.398 94.784 622.418 95.204 623.318 95.468C624.026 95.684 624.65 95.816 624.65 96.212V96.236C624.65 96.524 624.41 96.716 623.882 96.716C623.282 96.716 622.55 96.452 621.854 95.948L621.074 97.148C621.926 97.82 622.934 98.12 623.834 98.12ZM630.649 98.144C631.813 98.144 632.677 97.688 633.277 96.944L632.233 96.02C631.729 96.488 631.285 96.68 630.673 96.68C629.857 96.68 629.281 96.248 629.101 95.42H633.577C633.589 95.252 633.601 95.084 633.601 94.94C633.601 93.116 632.617 91.448 630.469 91.448C628.597 91.448 627.289 92.96 627.289 94.796V94.82C627.289 96.788 628.717 98.144 630.649 98.144ZM629.077 94.28C629.221 93.452 629.713 92.912 630.469 92.912C631.237 92.912 631.717 93.464 631.825 94.28H629.077ZM642.386 98.12C643.91 98.12 645.314 96.944 645.314 94.796V94.772C645.314 92.624 643.886 91.448 642.386 91.448C641.438 91.448 640.826 91.892 640.382 92.492V89.24H638.558V98H640.382V97.16C640.814 97.676 641.414 98.12 642.386 98.12ZM641.918 96.572C641.066 96.572 640.358 95.864 640.358 94.796V94.772C640.358 93.704 641.066 92.996 641.918 92.996C642.77 92.996 643.49 93.704 643.49 94.772V94.796C643.49 95.876 642.77 96.572 641.918 96.572ZM648.792 98.12C649.716 98.12 650.256 97.628 650.676 97.088V98H652.5V91.568H650.676V95.156C650.676 96.02 650.232 96.464 649.536 96.464C648.84 96.464 648.432 96.02 648.432 95.156V91.568H646.608V95.732C646.608 97.208 647.412 98.12 648.792 98.12ZM656.304 98.108C656.916 98.108 657.36 97.964 657.744 97.736V96.272C657.48 96.416 657.18 96.5 656.844 96.5C656.436 96.5 656.256 96.296 656.256 95.876V93.128H657.768V91.568H656.256V89.924H654.432V91.568H653.664V93.128H654.432V96.176C654.432 97.664 655.188 98.108 656.304 98.108ZM661.285 98.108C661.897 98.108 662.341 97.964 662.725 97.736V96.272C662.461 96.416 662.161 96.5 661.825 96.5C661.417 96.5 661.237 96.296 661.237 95.876V93.128H662.749V91.568H661.237V89.924H659.413V91.568H658.645V93.128H659.413V96.176C659.413 97.664 660.169 98.108 661.285 98.108ZM667.074 98.144C669.078 98.144 670.566 96.644 670.566 94.796V94.772C670.566 92.924 669.09 91.448 667.098 91.448C665.094 91.448 663.606 92.948 663.606 94.796V94.82C663.606 96.668 665.082 98.144 667.074 98.144ZM667.098 96.572C666.09 96.572 665.406 95.744 665.406 94.796V94.772C665.406 93.824 666.03 93.02 667.074 93.02C668.082 93.02 668.766 93.848 668.766 94.796V94.82C668.766 95.768 668.142 96.572 667.098 96.572ZM671.886 98H673.71V94.412C673.71 93.548 674.154 93.104 674.85 93.104C675.546 93.104 675.954 93.548 675.954 94.412V98H677.778V93.836C677.778 92.36 676.974 91.448 675.594 91.448C674.67 91.448 674.13 91.94 673.71 92.48V91.568H671.886V98Z"
		fill="#7B93B2"
	/>
	<path
		d="M560.667 94C560.667 92.5272 559.473 91.3333 558 91.3333C556.527 91.3333 555.333 92.5272 555.333 94C555.333 95.4728 556.527 96.6667 558 96.6667C559.473 96.6667 560.667 95.4728 560.667 94ZM558 94.5L585 94.5L585 93.5L558 93.5L558 94.5Z"
		fill="#7B93B2"
	/>
	<path
		d="M609.072 53.12C610.464 53.12 611.532 52.472 611.532 51.044V51.02C611.532 49.844 610.488 49.412 609.588 49.112C608.892 48.872 608.28 48.704 608.28 48.344V48.32C608.28 48.068 608.508 47.876 608.952 47.876C609.42 47.876 610.056 48.104 610.692 48.476L611.388 47.216C610.692 46.748 609.804 46.472 608.988 46.472C607.692 46.472 606.636 47.204 606.636 48.512V48.536C606.636 49.784 607.656 50.204 608.556 50.468C609.264 50.684 609.888 50.816 609.888 51.212V51.236C609.888 51.524 609.648 51.716 609.12 51.716C608.52 51.716 607.788 51.452 607.092 50.948L606.312 52.148C607.164 52.82 608.172 53.12 609.072 53.12ZM612.875 45.86H614.795V44.24H612.875V45.86ZM612.923 53H614.747V46.568H612.923V53ZM616.245 53H621.837V51.524H618.501L621.837 47.852V46.568H616.353V48.044H619.569L616.245 51.716V53ZM626.094 53.144C627.258 53.144 628.122 52.688 628.722 51.944L627.678 51.02C627.174 51.488 626.73 51.68 626.118 51.68C625.302 51.68 624.726 51.248 624.546 50.42H629.022C629.034 50.252 629.046 50.084 629.046 49.94C629.046 48.116 628.062 46.448 625.914 46.448C624.042 46.448 622.734 47.96 622.734 49.796V49.82C622.734 51.788 624.162 53.144 626.094 53.144ZM624.522 49.28C624.666 48.452 625.158 47.912 625.914 47.912C626.682 47.912 627.162 48.464 627.27 49.28H624.522ZM634.088 53H635.912V44.24H634.088V53ZM637.661 45.86H639.581V44.24H637.661V45.86ZM637.709 53H639.533V46.568H637.709V53ZM641.246 53H643.07V49.412C643.07 48.548 643.49 48.104 644.174 48.104C644.858 48.104 645.242 48.548 645.242 49.412V53H647.066V49.412C647.066 48.548 647.486 48.104 648.17 48.104C648.854 48.104 649.238 48.548 649.238 49.412V53H651.062V48.812C651.062 47.264 650.246 46.448 648.89 46.448C648.014 46.448 647.342 46.808 646.778 47.468C646.442 46.82 645.806 46.448 644.966 46.448C644.042 46.448 643.49 46.94 643.07 47.48V46.568H641.246V53ZM652.684 45.86H654.604V44.24H652.684V45.86ZM652.732 53H654.556V46.568H652.732V53ZM658.441 53.108C659.053 53.108 659.497 52.964 659.881 52.736V51.272C659.617 51.416 659.317 51.5 658.981 51.5C658.573 51.5 658.393 51.296 658.393 50.876V48.128H659.905V46.568H658.393V44.924H656.569V46.568H655.801V48.128H656.569V51.176C656.569 52.664 657.325 53.108 658.441 53.108ZM664.883 45.86H666.803V44.24H664.883V45.86ZM664.931 53H666.755V46.568H664.931V53ZM668.468 53H670.292V49.412C670.292 48.548 670.736 48.104 671.432 48.104C672.128 48.104 672.536 48.548 672.536 49.412V53H674.36V48.836C674.36 47.36 673.556 46.448 672.176 46.448C671.252 46.448 670.712 46.94 670.292 47.48V46.568H668.468V53ZM678.585 53.12C679.533 53.12 680.145 52.676 680.589 52.076V53H682.413V44.24H680.589V47.408C680.157 46.892 679.557 46.448 678.585 46.448C677.061 46.448 675.657 47.624 675.657 49.772V49.796C675.657 51.944 677.085 53.12 678.585 53.12ZM679.053 51.572C678.201 51.572 677.481 50.864 677.481 49.796V49.772C677.481 48.692 678.201 47.996 679.053 47.996C679.905 47.996 680.613 48.704 680.613 49.772V49.796C680.613 50.864 679.905 51.572 679.053 51.572ZM684.079 45.86H685.999V44.24H684.079V45.86ZM684.127 53H685.951V46.568H684.127V53ZM690.7 53.144C691.984 53.144 692.704 52.652 693.328 51.968L692.26 50.888C691.816 51.308 691.396 51.572 690.784 51.572C689.788 51.572 689.152 50.78 689.152 49.796V49.772C689.152 48.824 689.8 48.02 690.712 48.02C691.36 48.02 691.768 48.296 692.176 48.728L693.292 47.528C692.692 46.856 691.936 46.448 690.724 46.448C688.756 46.448 687.352 47.96 687.352 49.796V49.82C687.352 51.656 688.768 53.144 690.7 53.144ZM696.343 53.12C697.231 53.12 697.843 52.796 698.287 52.304V53H700.051V49.268C700.051 48.404 699.835 47.696 699.355 47.216C698.899 46.76 698.179 46.496 697.183 46.496C696.091 46.496 695.395 46.7 694.687 47.012L695.143 48.404C695.731 48.188 696.223 48.056 696.919 48.056C697.831 48.056 698.299 48.476 698.299 49.232V49.34C697.843 49.184 697.375 49.076 696.727 49.076C695.203 49.076 694.135 49.724 694.135 51.128V51.152C694.135 52.424 695.131 53.12 696.343 53.12ZM696.895 51.86C696.307 51.86 695.899 51.572 695.899 51.08V51.056C695.899 50.48 696.379 50.168 697.159 50.168C697.603 50.168 698.011 50.264 698.323 50.408V50.732C698.323 51.392 697.747 51.86 696.895 51.86ZM703.734 53.108C704.346 53.108 704.79 52.964 705.174 52.736V51.272C704.91 51.416 704.61 51.5 704.274 51.5C703.866 51.5 703.686 51.296 703.686 50.876V48.128H705.198V46.568H703.686V44.924H701.862V46.568H701.094V48.128H701.862V51.176C701.862 52.664 702.618 53.108 703.734 53.108ZM709.523 53.144C711.527 53.144 713.015 51.644 713.015 49.796V49.772C713.015 47.924 711.539 46.448 709.547 46.448C707.543 46.448 706.055 47.948 706.055 49.796V49.82C706.055 51.668 707.531 53.144 709.523 53.144ZM709.547 51.572C708.539 51.572 707.855 50.744 707.855 49.796V49.772C707.855 48.824 708.479 48.02 709.523 48.02C710.531 48.02 711.215 48.848 711.215 49.796V49.82C711.215 50.768 710.591 51.572 709.547 51.572ZM714.336 53H716.16V50.624C716.16 49.088 716.904 48.356 718.116 48.356H718.212V46.448C717.132 46.4 716.532 46.976 716.16 47.864V46.568H714.336V53Z"
		fill="#7B93B2"
	/>
	<path
		d="M576.667 49C576.667 47.5272 575.473 46.3333 574 46.3333C572.527 46.3333 571.333 47.5272 571.333 49C571.333 50.4728 572.527 51.6667 574 51.6667C575.473 51.6667 576.667 50.4728 576.667 49ZM574 49.5L601 49.5L601 48.5L574 48.5L574 49.5Z"
		fill="#7B93B2"
	/>
	<path
		d="M192.399 11H198.435V9.32H194.247V2.6H192.399V11ZM201.46 11.12C202.348 11.12 202.96 10.796 203.404 10.304V11H205.168V7.268C205.168 6.404 204.952 5.696 204.472 5.216C204.016 4.76 203.296 4.496 202.3 4.496C201.208 4.496 200.512 4.7 199.804 5.012L200.26 6.404C200.848 6.188 201.34 6.056 202.036 6.056C202.948 6.056 203.416 6.476 203.416 7.232V7.34C202.96 7.184 202.492 7.076 201.844 7.076C200.32 7.076 199.252 7.724 199.252 9.128V9.152C199.252 10.424 200.248 11.12 201.46 11.12ZM202.012 9.86C201.424 9.86 201.016 9.572 201.016 9.08V9.056C201.016 8.48 201.496 8.168 202.276 8.168C202.72 8.168 203.128 8.264 203.44 8.408V8.732C203.44 9.392 202.864 9.86 202.012 9.86ZM210.566 11.12C212.09 11.12 213.494 9.944 213.494 7.796V7.772C213.494 5.624 212.066 4.448 210.566 4.448C209.618 4.448 209.006 4.892 208.562 5.492V2.24H206.738V11H208.562V10.16C208.994 10.676 209.594 11.12 210.566 11.12ZM210.098 9.572C209.246 9.572 208.538 8.864 208.538 7.796V7.772C208.538 6.704 209.246 5.996 210.098 5.996C210.95 5.996 211.67 6.704 211.67 7.772V7.796C211.67 8.876 210.95 9.572 210.098 9.572ZM217.884 11.144C219.048 11.144 219.912 10.688 220.512 9.944L219.468 9.02C218.964 9.488 218.52 9.68 217.908 9.68C217.092 9.68 216.516 9.248 216.336 8.42H220.812C220.824 8.252 220.836 8.084 220.836 7.94C220.836 6.116 219.852 4.448 217.704 4.448C215.832 4.448 214.524 5.96 214.524 7.796V7.82C214.524 9.788 215.952 11.144 217.884 11.144ZM216.312 7.28C216.456 6.452 216.948 5.912 217.704 5.912C218.472 5.912 218.952 6.464 219.06 7.28H216.312ZM222.279 11H224.103V2.24H222.279V11Z"
		fill="#7B93B2"
	/>
	<path
		d="M207 38.3333C205.527 38.3333 204.333 39.5272 204.333 41C204.333 42.4728 205.527 43.6667 207 43.6667C208.473 43.6667 209.667 42.4728 209.667 41C209.667 39.5272 208.473 38.3333 207 38.3333ZM207.5 41L207.5 16L206.5 16L206.5 41L207.5 41Z"
		fill="#7B93B2"
	/>
	<path
		d="M56.4176 89.92H58.2416V87.16C58.6736 87.676 59.2736 88.12 60.2456 88.12C61.7696 88.12 63.1736 86.944 63.1736 84.796V84.772C63.1736 82.624 61.7456 81.448 60.2456 81.448C59.2976 81.448 58.6856 81.892 58.2416 82.492V81.568H56.4176V89.92ZM59.7776 86.572C58.9256 86.572 58.2176 85.864 58.2176 84.796V84.772C58.2176 83.704 58.9256 82.996 59.7776 82.996C60.6296 82.996 61.3496 83.704 61.3496 84.772V84.796C61.3496 85.876 60.6296 86.572 59.7776 86.572ZM64.5992 88H66.4232V79.24H64.5992V88ZM69.9603 88.12C70.8483 88.12 71.4603 87.796 71.9043 87.304V88H73.6683V84.268C73.6683 83.404 73.4523 82.696 72.9723 82.216C72.5163 81.76 71.7963 81.496 70.8003 81.496C69.7083 81.496 69.0123 81.7 68.3043 82.012L68.7603 83.404C69.3483 83.188 69.8403 83.056 70.5363 83.056C71.4483 83.056 71.9163 83.476 71.9163 84.232V84.34C71.4603 84.184 70.9923 84.076 70.3443 84.076C68.8203 84.076 67.7523 84.724 67.7523 86.128V86.152C67.7523 87.424 68.7483 88.12 69.9603 88.12ZM70.5123 86.86C69.9243 86.86 69.5163 86.572 69.5163 86.08V86.056C69.5163 85.48 69.9963 85.168 70.7763 85.168C71.2203 85.168 71.6283 85.264 71.9403 85.408V85.732C71.9403 86.392 71.3643 86.86 70.5123 86.86ZM78.2739 88.144C79.5579 88.144 80.2779 87.652 80.9019 86.968L79.8339 85.888C79.3899 86.308 78.9699 86.572 78.3579 86.572C77.3619 86.572 76.7259 85.78 76.7259 84.796V84.772C76.7259 83.824 77.3739 83.02 78.2859 83.02C78.9339 83.02 79.3419 83.296 79.7499 83.728L80.8659 82.528C80.2659 81.856 79.5099 81.448 78.2979 81.448C76.3299 81.448 74.9259 82.96 74.9259 84.796V84.82C74.9259 86.656 76.3419 88.144 78.2739 88.144ZM84.9656 88.144C86.1296 88.144 86.9936 87.688 87.5936 86.944L86.5496 86.02C86.0456 86.488 85.6016 86.68 84.9896 86.68C84.1736 86.68 83.5976 86.248 83.4176 85.42H87.8936C87.9056 85.252 87.9176 85.084 87.9176 84.94C87.9176 83.116 86.9336 81.448 84.7856 81.448C82.9136 81.448 81.6056 82.96 81.6056 84.796V84.82C81.6056 86.788 83.0336 88.144 84.9656 88.144ZM83.3936 84.28C83.5376 83.452 84.0296 82.912 84.7856 82.912C85.5536 82.912 86.0336 83.464 86.1416 84.28H83.3936ZM89.2769 88H91.1009V84.412C91.1009 83.548 91.5449 83.104 92.2409 83.104C92.9369 83.104 93.3449 83.548 93.3449 84.412V88H95.1689V83.836C95.1689 82.36 94.3649 81.448 92.9849 81.448C92.0609 81.448 91.5209 81.94 91.1009 82.48V79.24H89.2769V88ZM99.9095 88.144C101.914 88.144 103.402 86.644 103.402 84.796V84.772C103.402 82.924 101.926 81.448 99.9335 81.448C97.9295 81.448 96.4415 82.948 96.4415 84.796V84.82C96.4415 86.668 97.9175 88.144 99.9095 88.144ZM99.9335 86.572C98.9255 86.572 98.2415 85.744 98.2415 84.796V84.772C98.2415 83.824 98.8655 83.02 99.9095 83.02C100.918 83.02 101.602 83.848 101.602 84.796V84.82C101.602 85.768 100.978 86.572 99.9335 86.572ZM104.806 88H106.63V79.24H104.806V88ZM110.983 88.12C111.931 88.12 112.543 87.676 112.987 87.076V88H114.811V79.24H112.987V82.408C112.555 81.892 111.955 81.448 110.983 81.448C109.459 81.448 108.055 82.624 108.055 84.772V84.796C108.055 86.944 109.483 88.12 110.983 88.12ZM111.451 86.572C110.599 86.572 109.879 85.864 109.879 84.796V84.772C109.879 83.692 110.599 82.996 111.451 82.996C112.303 82.996 113.011 83.704 113.011 84.772V84.796C113.011 85.864 112.303 86.572 111.451 86.572ZM119.489 88.144C120.653 88.144 121.517 87.688 122.117 86.944L121.073 86.02C120.569 86.488 120.125 86.68 119.513 86.68C118.697 86.68 118.121 86.248 117.941 85.42H122.417C122.429 85.252 122.441 85.084 122.441 84.94C122.441 83.116 121.457 81.448 119.309 81.448C117.437 81.448 116.129 82.96 116.129 84.796V84.82C116.129 86.788 117.557 88.144 119.489 88.144ZM117.917 84.28C118.061 83.452 118.553 82.912 119.309 82.912C120.077 82.912 120.557 83.464 120.665 84.28H117.917ZM123.8 88H125.624V85.624C125.624 84.088 126.368 83.356 127.58 83.356H127.676V81.448C126.596 81.4 125.996 81.976 125.624 82.864V81.568H123.8V88Z"
		fill="#7B93B2"
	/>
	<path
		d="M180.333 84C180.333 85.4727 181.527 86.6667 183 86.6667C184.473 86.6667 185.667 85.4727 185.667 84C185.667 82.5272 184.473 81.3333 183 81.3333C181.527 81.3333 180.333 82.5272 180.333 84ZM183 83.5L134 83.5L134 84.5L183 84.5L183 83.5Z"
		fill="#7B93B2"
	/>
	<path
		d="M3.52672 111.12C4.41472 111.12 5.02672 110.796 5.47072 110.304V111H7.23472V107.268C7.23472 106.404 7.01872 105.696 6.53872 105.216C6.08272 104.76 5.36272 104.496 4.36672 104.496C3.27472 104.496 2.57872 104.7 1.87072 105.012L2.32672 106.404C2.91472 106.188 3.40672 106.056 4.10272 106.056C5.01472 106.056 5.48272 106.476 5.48272 107.232V107.34C5.02672 107.184 4.55872 107.076 3.91072 107.076C2.38672 107.076 1.31872 107.724 1.31872 109.128V109.152C1.31872 110.424 2.31472 111.12 3.52672 111.12ZM4.07872 109.86C3.49072 109.86 3.08272 109.572 3.08272 109.08V109.056C3.08272 108.48 3.56272 108.168 4.34272 108.168C4.78672 108.168 5.19472 108.264 5.50672 108.408V108.732C5.50672 109.392 4.93072 109.86 4.07872 109.86ZM11.8403 111.144C13.1243 111.144 13.8443 110.652 14.4683 109.968L13.4003 108.888C12.9563 109.308 12.5363 109.572 11.9243 109.572C10.9283 109.572 10.2923 108.78 10.2923 107.796V107.772C10.2923 106.824 10.9403 106.02 11.8523 106.02C12.5003 106.02 12.9083 106.296 13.3163 106.728L14.4323 105.528C13.8323 104.856 13.0763 104.448 11.8643 104.448C9.89628 104.448 8.49228 105.96 8.49228 107.796V107.82C8.49228 109.656 9.90828 111.144 11.8403 111.144ZM18.52 111.144C19.804 111.144 20.524 110.652 21.148 109.968L20.08 108.888C19.636 109.308 19.216 109.572 18.604 109.572C17.608 109.572 16.972 108.78 16.972 107.796V107.772C16.972 106.824 17.62 106.02 18.532 106.02C19.18 106.02 19.588 106.296 19.996 106.728L21.112 105.528C20.512 104.856 19.756 104.448 18.544 104.448C16.576 104.448 15.172 105.96 15.172 107.796V107.82C15.172 109.656 16.588 111.144 18.52 111.144ZM25.2117 111.144C26.3757 111.144 27.2397 110.688 27.8397 109.944L26.7957 109.02C26.2917 109.488 25.8477 109.68 25.2357 109.68C24.4197 109.68 23.8437 109.248 23.6637 108.42H28.1397C28.1517 108.252 28.1637 108.084 28.1637 107.94C28.1637 106.116 27.1797 104.448 25.0317 104.448C23.1597 104.448 21.8517 105.96 21.8517 107.796V107.82C21.8517 109.788 23.2797 111.144 25.2117 111.144ZM23.6397 107.28C23.7837 106.452 24.2757 105.912 25.0317 105.912C25.7997 105.912 26.2797 106.464 26.3877 107.28H23.6397ZM29.523 112.92H31.347V110.16C31.779 110.676 32.379 111.12 33.351 111.12C34.875 111.12 36.279 109.944 36.279 107.796V107.772C36.279 105.624 34.851 104.448 33.351 104.448C32.403 104.448 31.791 104.892 31.347 105.492V104.568H29.523V112.92ZM32.883 109.572C32.031 109.572 31.323 108.864 31.323 107.796V107.772C31.323 106.704 32.031 105.996 32.883 105.996C33.735 105.996 34.455 106.704 34.455 107.772V107.796C34.455 108.876 33.735 109.572 32.883 109.572ZM39.7927 111.108C40.4047 111.108 40.8487 110.964 41.2327 110.736V109.272C40.9687 109.416 40.6687 109.5 40.3327 109.5C39.9247 109.5 39.7447 109.296 39.7447 108.876V106.128H41.2567V104.568H39.7447V102.924H37.9207V104.568H37.1527V106.128H37.9207V109.176C37.9207 110.664 38.6767 111.108 39.7927 111.108ZM44.4252 111.12C45.3132 111.12 45.9252 110.796 46.3692 110.304V111H48.1332V107.268C48.1332 106.404 47.9172 105.696 47.4372 105.216C46.9812 104.76 46.2612 104.496 45.2652 104.496C44.1732 104.496 43.4772 104.7 42.7692 105.012L43.2252 106.404C43.8132 106.188 44.3052 106.056 45.0012 106.056C45.9132 106.056 46.3812 106.476 46.3812 107.232V107.34C45.9252 107.184 45.4572 107.076 44.8092 107.076C43.2852 107.076 42.2172 107.724 42.2172 109.128V109.152C42.2172 110.424 43.2132 111.12 44.4252 111.12ZM44.9772 109.86C44.3892 109.86 43.9812 109.572 43.9812 109.08V109.056C43.9812 108.48 44.4612 108.168 45.2412 108.168C45.6852 108.168 46.0932 108.264 46.4052 108.408V108.732C46.4052 109.392 45.8292 109.86 44.9772 109.86ZM53.5307 111.12C55.0547 111.12 56.4587 109.944 56.4587 107.796V107.772C56.4587 105.624 55.0307 104.448 53.5307 104.448C52.5827 104.448 51.9707 104.892 51.5267 105.492V102.24H49.7027V111H51.5267V110.16C51.9587 110.676 52.5587 111.12 53.5307 111.12ZM53.0627 109.572C52.2107 109.572 51.5027 108.864 51.5027 107.796V107.772C51.5027 106.704 52.2107 105.996 53.0627 105.996C53.9147 105.996 54.6347 106.704 54.6347 107.772V107.796C54.6347 108.876 53.9147 109.572 53.0627 109.572ZM57.8844 111H59.7084V102.24H57.8844V111ZM64.4695 111.144C65.6335 111.144 66.4975 110.688 67.0975 109.944L66.0535 109.02C65.5495 109.488 65.1055 109.68 64.4935 109.68C63.6775 109.68 63.1015 109.248 62.9215 108.42H67.3975C67.4095 108.252 67.4215 108.084 67.4215 107.94C67.4215 106.116 66.4375 104.448 64.2895 104.448C62.4175 104.448 61.1095 105.96 61.1095 107.796V107.82C61.1095 109.788 62.5375 111.144 64.4695 111.144ZM62.8975 107.28C63.0415 106.452 63.5335 105.912 64.2895 105.912C65.0575 105.912 65.5375 106.464 65.6455 107.28H62.8975ZM72.6905 111H74.5145V106.128H75.9665V104.64H74.4905V104.388C74.4905 103.908 74.7305 103.692 75.1505 103.692C75.4625 103.692 75.7145 103.752 75.9785 103.848V102.336C75.6425 102.228 75.2585 102.156 74.6825 102.156C74.0345 102.156 73.5425 102.324 73.2065 102.66C72.8705 102.996 72.6905 103.512 72.6905 104.22V104.628H71.9345V106.128H72.6905V111ZM77.0465 111H78.8705V104.568H77.0465V111ZM76.9985 103.86H78.9185V102.24H76.9985V103.86ZM80.6656 111H82.4896V102.24H80.6656V111ZM87.2507 111.144C88.4147 111.144 89.2787 110.688 89.8787 109.944L88.8347 109.02C88.3307 109.488 87.8867 109.68 87.2747 109.68C86.4587 109.68 85.8827 109.248 85.7027 108.42H90.1787C90.1907 108.252 90.2027 108.084 90.2027 107.94C90.2027 106.116 89.2187 104.448 87.0707 104.448C85.1987 104.448 83.8907 105.96 83.8907 107.796V107.82C83.8907 109.788 85.3187 111.144 87.2507 111.144ZM85.6787 107.28C85.8227 106.452 86.3147 105.912 87.0707 105.912C87.8387 105.912 88.3187 106.464 88.4267 107.28H85.6787ZM97.3318 111.108C97.9438 111.108 98.3878 110.964 98.7718 110.736V109.272C98.5078 109.416 98.2078 109.5 97.8717 109.5C97.4638 109.5 97.2838 109.296 97.2838 108.876V106.128H98.7958V104.568H97.2838V102.924H95.4598V104.568H94.6918V106.128H95.4598V109.176C95.4598 110.664 96.2158 111.108 97.3318 111.108ZM102.96 108.948L101.496 104.568H99.5642L102.084 111.024C101.928 111.348 101.76 111.444 101.448 111.444C101.208 111.444 100.908 111.336 100.668 111.192L100.056 112.512C100.524 112.788 101.016 112.956 101.676 112.956C102.768 112.956 103.296 112.464 103.788 111.156L106.26 104.568H104.364L102.96 108.948ZM107.336 112.92H109.16V110.16C109.592 110.676 110.192 111.12 111.164 111.12C112.688 111.12 114.092 109.944 114.092 107.796V107.772C114.092 105.624 112.664 104.448 111.164 104.448C110.216 104.448 109.604 104.892 109.16 105.492V104.568H107.336V112.92ZM110.696 109.572C109.844 109.572 109.136 108.864 109.136 107.796V107.772C109.136 106.704 109.844 105.996 110.696 105.996C111.548 105.996 112.268 106.704 112.268 107.772V107.796C112.268 108.876 111.548 109.572 110.696 109.572ZM118.481 111.144C119.645 111.144 120.509 110.688 121.109 109.944L120.065 109.02C119.561 109.488 119.117 109.68 118.505 109.68C117.689 109.68 117.113 109.248 116.933 108.42H121.409C121.421 108.252 121.433 108.084 121.433 107.94C121.433 106.116 120.449 104.448 118.301 104.448C116.429 104.448 115.121 105.96 115.121 107.796V107.82C115.121 109.788 116.549 111.144 118.481 111.144ZM116.909 107.28C117.053 106.452 117.545 105.912 118.301 105.912C119.069 105.912 119.549 106.464 119.657 107.28H116.909ZM125.049 111.12C126.441 111.12 127.509 110.472 127.509 109.044V109.02C127.509 107.844 126.465 107.412 125.565 107.112C124.869 106.872 124.257 106.704 124.257 106.344V106.32C124.257 106.068 124.485 105.876 124.929 105.876C125.397 105.876 126.033 106.104 126.669 106.476L127.365 105.216C126.669 104.748 125.781 104.472 124.965 104.472C123.669 104.472 122.613 105.204 122.613 106.512V106.536C122.613 107.784 123.633 108.204 124.533 108.468C125.241 108.684 125.865 108.816 125.865 109.212V109.236C125.865 109.524 125.625 109.716 125.097 109.716C124.497 109.716 123.765 109.452 123.069 108.948L122.289 110.148C123.141 110.82 124.149 111.12 125.049 111.12Z"
		fill="#7B93B2"
	/>
	<path
		d="M180.333 107C180.333 108.473 181.527 109.667 183 109.667C184.473 109.667 185.667 108.473 185.667 107C185.667 105.527 184.473 104.333 183 104.333C181.527 104.333 180.333 105.527 180.333 107ZM183 106.5L134 106.5L134 107.5L183 107.5L183 106.5Z"
		fill="#7B93B2"
	/>
</svg>`,{useArgs:e1,useEffect:C1,useState:o}=__STORYBOOK_MODULE_PREVIEW_API__,l1={title:"@nonfx/flow-core/f-file-upload",parameters:{controls:{hideNoControlsWarning:!0}}},p={render:C=>{const[i,n]=e1(),t=e=>{e!=null&&e.detail&&(console.log(e.detail.value),C.type==="single"?n({value:e.detail.value?{name:e.detail.value.name}:e.detail.value}):n({value:e.detail.value}))};return V`
            <f-div width="100%" padding="large">
                <f-file-upload
                    .type=${C.type}
                    .value=${C.value}
                    placeholder=${C.placeholder}
                    .state=${C.state}
                    .size=${C.size}
                    file-type=${C["file-type"]}
                    max-size=${C["max-size"]}
                    ?disabled=${C.disabled}
                    ?loading=${C.loading}
                    @input=${t}
                >
                    <f-div slot="label" padding="none" gap="none">Label</f-div>
                    <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                    <f-text slot="subtitle" state="secondary" variant="para" size="small">Optional</f-text>
                    <f-icon slot="icon-tooltip" source="i-question-filled" tooltip="some info"></f-icon>
                </f-file-upload>
            </f-div>
        `},name:"Playground",argTypes:{value:{control:"object"},type:{control:"radio",options:["single","multiple"]},placeholder:{control:"text"},state:{control:"select",options:["default","success","primary","warning","danger"]},"file-type":{control:"text"},size:{control:"radio",options:["small","medium"]},"max-size":{control:"text"},disabled:{control:"boolean"},loading:{control:"boolean"}},args:{value:void 0,type:"single",placeholder:"Drag and Drop Files or Click here to upload",state:"default",size:"medium","file-type":"all","max-size":void 0,disabled:!1,loading:!1}},u={render:()=>V`<div class="align-center" padding="large">${Q(X)}</div>`,name:"Anatomy"},f={render:C=>{const i=["single","multiple"],[n,t]=o(null),[e,l]=o(null),s=(d,a)=>{a==="single"?t(d.detail.value):l(d.detail.value)};return V`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                ${i.map(d=>V`<f-div>
                            <f-file-upload
                                .type=${d}
                                .value=${d==="single"?n:e}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=${a=>s(a,d)}
                            >
                                <f-div slot="label" padding="none" gap="none">${d} File Selection</f-div>
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >`)}
            </f-div>
        `},name:"type",parameters:{docs:{inlineStories:!1,iframeHeight:200}}},H={render:C=>{const i=["single","multiple"],n=new File(["test"],"test.pdf"),[t,e]=o(n),[l,s]=o([n]),d=(a,r)=>{r==="single"?e(a.detail.value):s(a.detail.value)};return V`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                ${i.map(a=>V`<f-div>
                            <f-file-upload
                                .type=${a}
                                .value=${a==="single"?t:l}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=${r=>d(r,a)}
                            >
                                <f-div slot="label" padding="none" gap="none"
                                    >${a} File Selection -
                                    ${a==="single"?"value as a file object":"value as an array of file objects"}</f-div
                                >
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >`)}
            </f-div>
        `},name:"value",parameters:{docs:{inlineStories:!1,iframeHeight:200}}},c={render:C=>{const i=["single","multiple"],n=new File(["test"],"test.pdf"),[t,e]=o(n),[l,s]=o(null),d=(a,r)=>{r==="single"?e(a.detail.value):s(a.detail.value)};return V`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                ${i.map(a=>V`<f-div>
                            <f-file-upload
                                .type=${a}
                                .value=${a==="single"?t:l}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=${r=>d(r,a)}
                            >
                                <f-div slot="label" padding="none" gap="none"
                                    >${a} File Selection - placeholder</f-div
                                >
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >`)}
            </f-div>
        `},name:"placeholder",parameters:{docs:{inlineStories:!1,iframeHeight:200}}},g={render:C=>{const i=["all",".pdf",".pdf, .jpg, .jpeg"],[n,t]=o(null),e=(l,s)=>{t(l.detail.value)};return V`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                ${i.map(l=>V`<f-div>
                            <f-file-upload
                                type="single"
                                .value=${n}
                                file-type=${l}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=${s=>e(s)}
                            >
                                <f-div slot="label" padding="none" gap="none"
                                    >File Formats accepted - ${l}
                                </f-div>
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >`)}
            </f-div>
        `},name:"file-type",parameters:{docs:{inlineStories:!1,iframeHeight:200}}},m={render:C=>{const i=["small","medium"],[n,t]=o(null),e=(l,s)=>{t(l.detail.value)};return V`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                ${i.map(l=>V`<f-div>
                            <f-file-upload
                                type="single"
                                .value=${n}
                                .size=${l}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=${s=>e(s)}
                            >
                                <f-div slot="label" padding="none" gap="none">Size - ${l} </f-div>
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >`)}
            </f-div>
        `},name:"size"},M={render:C=>{const i=[["default","primary","success"],["danger","warning","default"]],[n,t]=o(null),e=l=>{t(l.detail.value)};return V`
            <f-div direction="column" gap="medium">
                ${i.map(l=>V` <f-div align="middle-center" padding="large" gap="medium">
                            ${l.map(s=>V`<f-div>
                                        <f-file-upload
                                            type="single"
                                            .value=${n}
                                            .state=${s}
                                            placeholder="Drag and Drop Files or Click here to upload"
                                            @input=${d=>e(d)}
                                        >
                                            <f-div slot="label" padding="none" gap="none">State - ${l} </f-div>
                                            <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                                        </f-file-upload></f-div
                                    >`)}
                        </f-div>`)}
            </f-div>
        `},name:"state"},v={render:C=>{const[i,n]=o(null),t=e=>{n(e.detail.value)};return V`
            <f-div width="100%" align="top-left" padding="large" gap="medium"
                ><f-div>
                    <f-file-upload
                        type="single"
                        .value=${i}
                        placeholder="Drag and Drop Files or Click here to upload"
                        max-size="100 MB"
                        @input=${e=>t(e)}
                    >
                        <f-div slot="label" padding="none" gap="none">Max Size Label </f-div>
                        <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                    </f-file-upload></f-div
                >
            </f-div>
        `},name:"max-size"},Z={render:C=>{const[i,n]=o(null),t=e=>{n(e.detail.value)};return V`
            <f-div width="100%" align="top-left" padding="large" gap="medium"
                ><f-div>
                    <f-file-upload
                        type="single"
                        .value=${i}
                        placeholder="Drag and Drop Files or Click here to upload"
                        max-size="100 MB"
                        @input=${e=>t(e)}
                        ?disabled=${!0}
                    >
                        <f-div slot="label" padding="none" gap="none">Disabled Flag </f-div>
                        <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                    </f-file-upload></f-div
                >
                <f-div>
                    <f-file-upload
                        type="single"
                        .value=${i}
                        placeholder="Drag and Drop Files or Click here to upload"
                        max-size="100 MB"
                        @input=${e=>t(e)}
                        ?loading=${!0}
                    >
                        <f-div slot="label" padding="none" gap="none">Loading Flag</f-div>
                        <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                    </f-file-upload></f-div
                >
            </f-div>
        `},name:"Flags"};var h,L,$;p.parameters={...p.parameters,docs:{...(h=p.parameters)==null?void 0:h.docs,source:{originalSource:`{
  render: args => {
    const [_, updateArgs] = useArgs();
    const handleInput = e => {
      if (e?.detail) {
        console.log(e.detail.value);
        if (args.type === "single") {
          updateArgs({
            value: e.detail.value ? {
              name: e.detail.value.name
            } : e.detail.value
          });
        } else {
          updateArgs({
            value: e.detail.value
          });
        }
      }
    };
    return html\`
            <f-div width="100%" padding="large">
                <f-file-upload
                    .type=\${args.type}
                    .value=\${args.value}
                    placeholder=\${args.placeholder}
                    .state=\${args.state}
                    .size=\${args.size}
                    file-type=\${args["file-type"]}
                    max-size=\${args["max-size"]}
                    ?disabled=\${args.disabled}
                    ?loading=\${args.loading}
                    @input=\${handleInput}
                >
                    <f-div slot="label" padding="none" gap="none">Label</f-div>
                    <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                    <f-text slot="subtitle" state="secondary" variant="para" size="small">Optional</f-text>
                    <f-icon slot="icon-tooltip" source="i-question-filled" tooltip="some info"></f-icon>
                </f-file-upload>
            </f-div>
        \`;
  },
  name: "Playground",
  argTypes: {
    value: {
      control: "object"
    },
    type: {
      control: "radio",
      options: ["single", "multiple"]
    },
    placeholder: {
      control: "text"
    },
    state: {
      control: "select",
      options: ["default", "success", "primary", "warning", "danger"]
    },
    ["file-type"]: {
      control: "text"
    },
    size: {
      control: "radio",
      options: ["small", "medium"]
    },
    ["max-size"]: {
      control: "text"
    },
    disabled: {
      control: "boolean"
    },
    loading: {
      control: "boolean"
    }
  },
  args: {
    value: undefined,
    type: "single",
    placeholder: "Drag and Drop Files or Click here to upload",
    state: "default",
    size: "medium",
    ["file-type"]: "all",
    ["max-size"]: undefined,
    disabled: false,
    loading: false
  }
}`,...($=(L=p.parameters)==null?void 0:L.docs)==null?void 0:$.source}}};var x,y,S;u.parameters={...u.parameters,docs:{...(x=u.parameters)==null?void 0:x.docs,source:{originalSource:'{\n  render: () => html`<div class="align-center" padding="large">${unsafeSVG(fFileUploadAnatomy)}</div>`,\n  name: "Anatomy"\n}',...(S=(y=u.parameters)==null?void 0:y.docs)==null?void 0:S.source}}};var b,z,F;f.parameters={...f.parameters,docs:{...(b=f.parameters)==null?void 0:b.docs,source:{originalSource:`{
  render: args => {
    const types = ["single", "multiple"];
    const [value, setValue] = useState(null);
    const [multipleValue, setMultipleValue] = useState(null);
    const handleValue = (e, type) => {
      if (type === "single") setValue(e.detail.value);else setMultipleValue(e.detail.value);
    };
    return html\`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                \${types.map(item => html\`<f-div>
                            <f-file-upload
                                .type=\${item}
                                .value=\${item === "single" ? value : multipleValue}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=\${e => handleValue(e, item)}
                            >
                                <f-div slot="label" padding="none" gap="none">\${item} File Selection</f-div>
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >\`)}
            </f-div>
        \`;
  },
  name: "type",
  parameters: {
    docs: {
      inlineStories: false,
      iframeHeight: 200
    }
  }
}`,...(F=(z=f.parameters)==null?void 0:z.docs)==null?void 0:F.source}}};var D,w,T;H.parameters={...H.parameters,docs:{...(D=H.parameters)==null?void 0:D.docs,source:{originalSource:`{
  render: args => {
    const types = ["single", "multiple"];
    const file = new File(["test"], "test.pdf");
    const [value, setValue] = useState(file);
    const [multipleValue, setMultipleValue] = useState([file]);
    const handleValue = (e, type) => {
      if (type === "single") setValue(e.detail.value);else setMultipleValue(e.detail.value);
    };
    return html\`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                \${types.map(item => html\`<f-div>
                            <f-file-upload
                                .type=\${item}
                                .value=\${item === "single" ? value : multipleValue}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=\${e => handleValue(e, item)}
                            >
                                <f-div slot="label" padding="none" gap="none"
                                    >\${item} File Selection -
                                    \${item === "single" ? "value as a file object" : "value as an array of file objects"}</f-div
                                >
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >\`)}
            </f-div>
        \`;
  },
  name: "value",
  parameters: {
    docs: {
      inlineStories: false,
      iframeHeight: 200
    }
  }
}`,...(T=(w=H.parameters)==null?void 0:w.docs)==null?void 0:T.source}}};var B,k,A;c.parameters={...c.parameters,docs:{...(B=c.parameters)==null?void 0:B.docs,source:{originalSource:`{
  render: args => {
    const types = ["single", "multiple"];
    const file = new File(["test"], "test.pdf");
    const [value, setValue] = useState(file);
    const [multipleValue, setMultipleValue] = useState(null);
    const handleValue = (e, type) => {
      if (type === "single") setValue(e.detail.value);else setMultipleValue(e.detail.value);
    };
    return html\`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                \${types.map(item => html\`<f-div>
                            <f-file-upload
                                .type=\${item}
                                .value=\${item === "single" ? value : multipleValue}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=\${e => handleValue(e, item)}
                            >
                                <f-div slot="label" padding="none" gap="none"
                                    >\${item} File Selection - placeholder</f-div
                                >
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >\`)}
            </f-div>
        \`;
  },
  name: "placeholder",
  parameters: {
    docs: {
      inlineStories: false,
      iframeHeight: 200
    }
  }
}`,...(A=(k=c.parameters)==null?void 0:k.docs)==null?void 0:A.source}}};var _,j,P;g.parameters={...g.parameters,docs:{...(_=g.parameters)==null?void 0:_.docs,source:{originalSource:`{
  render: args => {
    const fileTypes = ["all", ".pdf", ".pdf, .jpg, .jpeg"];
    const [value, setValue] = useState(null);
    const handleValue = (e, type) => {
      setValue(e.detail.value);
    };
    return html\`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                \${fileTypes.map(item => html\`<f-div>
                            <f-file-upload
                                type="single"
                                .value=\${value}
                                file-type=\${item}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=\${e => handleValue(e, item)}
                            >
                                <f-div slot="label" padding="none" gap="none"
                                    >File Formats accepted - \${item}
                                </f-div>
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >\`)}
            </f-div>
        \`;
  },
  name: "file-type",
  parameters: {
    docs: {
      inlineStories: false,
      iframeHeight: 200
    }
  }
}`,...(P=(j=g.parameters)==null?void 0:j.docs)==null?void 0:P.source}}};var O,E,I;m.parameters={...m.parameters,docs:{...(O=m.parameters)==null?void 0:O.docs,source:{originalSource:`{
  render: args => {
    const sizes = ["small", "medium"];
    const [value, setValue] = useState(null);
    const handleValue = (e, type) => {
      setValue(e.detail.value);
    };
    return html\`
            <f-div width="100%" align="top-left" padding="large" gap="medium">
                \${sizes.map(item => html\`<f-div>
                            <f-file-upload
                                type="single"
                                .value=\${value}
                                .size=\${item}
                                placeholder="Drag and Drop Files or Click here to upload"
                                @input=\${e => handleValue(e, item)}
                            >
                                <f-div slot="label" padding="none" gap="none">Size - \${item} </f-div>
                                <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                            </f-file-upload></f-div
                        >\`)}
            </f-div>
        \`;
  },
  name: "size"
}`,...(I=(E=m.parameters)==null?void 0:E.docs)==null?void 0:I.source}}};var U,q,R;M.parameters={...M.parameters,docs:{...(U=M.parameters)==null?void 0:U.docs,source:{originalSource:`{
  render: args => {
    const states = [["default", "primary", "success"], ["danger", "warning", "default"]];
    const [value, setValue] = useState(null);
    const handleValue = e => {
      setValue(e.detail.value);
    };
    return html\`
            <f-div direction="column" gap="medium">
                \${states.map(item => html\` <f-div align="middle-center" padding="large" gap="medium">
                            \${item.map(state => html\`<f-div>
                                        <f-file-upload
                                            type="single"
                                            .value=\${value}
                                            .state=\${state}
                                            placeholder="Drag and Drop Files or Click here to upload"
                                            @input=\${e => handleValue(e)}
                                        >
                                            <f-div slot="label" padding="none" gap="none">State - \${item} </f-div>
                                            <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                                        </f-file-upload></f-div
                                    >\`)}
                        </f-div>\`)}
            </f-div>
        \`;
  },
  name: "state"
}`,...(R=(q=M.parameters)==null?void 0:q.docs)==null?void 0:R.source}}};var W,G,K;v.parameters={...v.parameters,docs:{...(W=v.parameters)==null?void 0:W.docs,source:{originalSource:`{
  render: args => {
    const [value, setValue] = useState(null);
    const handleValue = e => {
      setValue(e.detail.value);
    };
    return html\`
            <f-div width="100%" align="top-left" padding="large" gap="medium"
                ><f-div>
                    <f-file-upload
                        type="single"
                        .value=\${value}
                        placeholder="Drag and Drop Files or Click here to upload"
                        max-size="100 MB"
                        @input=\${e => handleValue(e)}
                    >
                        <f-div slot="label" padding="none" gap="none">Max Size Label </f-div>
                        <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                    </f-file-upload></f-div
                >
            </f-div>
        \`;
  },
  name: "max-size"
}`,...(K=(G=v.parameters)==null?void 0:G.docs)==null?void 0:K.source}}};var N,Y,J;Z.parameters={...Z.parameters,docs:{...(N=Z.parameters)==null?void 0:N.docs,source:{originalSource:`{
  render: args => {
    const [value, setValue] = useState(null);
    const handleValue = e => {
      setValue(e.detail.value);
    };
    return html\`
            <f-div width="100%" align="top-left" padding="large" gap="medium"
                ><f-div>
                    <f-file-upload
                        type="single"
                        .value=\${value}
                        placeholder="Drag and Drop Files or Click here to upload"
                        max-size="100 MB"
                        @input=\${e => handleValue(e)}
                        ?disabled=\${true}
                    >
                        <f-div slot="label" padding="none" gap="none">Disabled Flag </f-div>
                        <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                    </f-file-upload></f-div
                >
                <f-div>
                    <f-file-upload
                        type="single"
                        .value=\${value}
                        placeholder="Drag and Drop Files or Click here to upload"
                        max-size="100 MB"
                        @input=\${e => handleValue(e)}
                        ?loading=\${true}
                    >
                        <f-div slot="label" padding="none" gap="none">Loading Flag</f-div>
                        <f-text slot="help" variant="para" size="small">This is a Subtext</f-text>
                    </f-file-upload></f-div
                >
            </f-div>
        \`;
  },
  name: "Flags"
}`,...(J=(Y=Z.parameters)==null?void 0:Y.docs)==null?void 0:J.source}}};const a1=["Playground","Anatomy","Type","Value","Placeholder","FileType","Size","State","MaxSize","Flags"],t1=Object.freeze(Object.defineProperty({__proto__:null,Anatomy:u,FileType:g,Flags:Z,MaxSize:v,Placeholder:c,Playground:p,Size:m,State:M,Type:f,Value:H,__namedExportsOrder:a1,default:l1},Symbol.toStringTag,{value:"Module"}));export{u as A,t1 as F,v as M,p as P,m as S,f as T,H as V,c as a,g as b,M as c,Z as d};
